<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/frontend/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;&#10;  &lt;title&gt;Vibrant Chatbot&lt;/title&gt;&#10;  &lt;style&gt;&#10;    /* Reset básico */&#10;    * { margin:0; padding:0; box-sizing: border-box; }&#10;&#10;    body {&#10;      font-family: 'Segoe UI', sans-serif;&#10;      background: linear-gradient(135deg, #FF5F6D 0%, #FFC371 100%);&#10;      height: 100vh;&#10;      display: flex;&#10;      align-items: center;&#10;      justify-content: center;&#10;    }&#10;&#10;    .chat-container {&#10;      width: 360px;&#10;      max-width: 90%;&#10;      height: 600px;&#10;      background: #FFFFFF;&#10;      border-radius: 20px;&#10;      box-shadow: 0 10px 30px rgba(0,0,0,0.2);&#10;      display: flex;&#10;      flex-direction: column;&#10;      overflow: hidden;&#10;    }&#10;&#10;    .header {&#10;      background: linear-gradient(90deg, #FF5F6D, #FFC371);&#10;      padding: 16px;&#10;      color: white;&#10;      text-align: center;&#10;      font-weight: bold;&#10;      font-size: 1.2rem;&#10;    }&#10;&#10;    .messages {&#10;      flex: 1;&#10;      padding: 16px;&#10;      overflow-y: auto;&#10;    }&#10;&#10;    .message {&#10;      margin-bottom: 12px;&#10;      display: flex;&#10;    }&#10;    .message.user { justify-content: flex-end; }&#10;    .message.bot { justify-content: flex-start; }&#10;&#10;    .bubble {&#10;      max-width: 75%;&#10;      padding: 10px 14px;&#10;      border-radius: 18px;&#10;      position: relative;&#10;      line-height: 1.4;&#10;    }&#10;    .message.user .bubble {&#10;      background: #FF5F6D;&#10;      color: white;&#10;      border-bottom-right-radius: 2px;&#10;    }&#10;    .message.bot .bubble {&#10;      background: #E0E0E0;&#10;      color: #333;&#10;      border-bottom-left-radius: 2px;&#10;    }&#10;&#10;    .input-area {&#10;      display: flex;&#10;      padding: 12px;&#10;      background: #F9F9F9;&#10;    }&#10;    .input-area input {&#10;      flex: 1;&#10;      padding: 10px 12px;&#10;      border: none;&#10;      border-radius: 18px;&#10;      margin-right: 8px;&#10;      font-size: 1rem;&#10;      box-shadow: inset 0 2px 5px rgba(0,0,0,0.1);&#10;    }&#10;    .input-area button {&#10;      background: #FF5F6D;&#10;      border: none;&#10;      border-radius: 18px;&#10;      padding: 0 16px;&#10;      color: white;&#10;      font-weight: bold;&#10;      cursor: pointer;&#10;      transition: background .2s;&#10;    }&#10;    .input-area button:hover {&#10;      background: #FF375A;&#10;    }&#10;  &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;  &lt;div class=&quot;chat-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;Chat with Bot&lt;/div&gt;&#10;    &lt;div id=&quot;messages&quot; class=&quot;messages&quot;&gt;&lt;/div&gt;&#10;    &lt;div class=&quot;input-area&quot;&gt;&#10;      &lt;input type=&quot;text&quot; id=&quot;userInput&quot; placeholder=&quot;Type a message...&quot; /&gt;&#10;      &lt;button id=&quot;sendBtn&quot;&gt;Send&lt;/button&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&#10;  &lt;script&gt;&#10;    const messagesEl = document.getElementById('messages');&#10;    const inputEl    = document.getElementById('userInput');&#10;    const sendBtn    = document.getElementById('sendBtn');&#10;&#10;    // Função para renderizar balões&#10;    function addMessage(text, sender) {&#10;      const msgEl = document.createElement('div');&#10;      msgEl.classList.add('message', sender);&#10;      const bubble = document.createElement('div');&#10;      bubble.classList.add('bubble');&#10;      bubble.textContent = text;&#10;      msgEl.appendChild(bubble);&#10;      messagesEl.appendChild(msgEl);&#10;      messagesEl.scrollTop = messagesEl.scrollHeight;&#10;    }&#10;&#10;    // Chama seu webhook FastAPI → Dialogflow&#10;    async function sendToBot(text) {&#10;      addMessage(text, 'user');&#10;      inputEl.value = '';&#10;      try {&#10;        const res = await fetch('https://your-domain.com/webhook', {&#10;          method: 'POST',&#10;          headers: { 'Content-Type': 'application/json' },&#10;          body: JSON.stringify({&#10;            session: 'projects/your-project-id/agent/sessions/unique-session',&#10;            queryInput: { text: { text, languageCode: 'en' } }&#10;          })&#10;        });&#10;        const json = await res.json();&#10;        const reply = json.fulfillmentText || '...';&#10;        addMessage(reply, 'bot');&#10;      } catch (err) {&#10;        addMessage('Error connecting to bot.', 'bot');&#10;        console.error(err);&#10;      }&#10;    }&#10;&#10;    sendBtn.addEventListener('click', () =&gt; {&#10;      const txt = inputEl.value.trim();&#10;      if (txt) sendToBot(txt);&#10;    });&#10;    inputEl.addEventListener('keypress', e =&gt; {&#10;      if (e.key === 'Enter') sendBtn.click();&#10;    });&#10;&#10;    // Mensagem inicial&#10;    addMessage('Hello! How can I help you today?', 'bot');&#10;  &lt;/script&gt;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;&#10;  &lt;title&gt;Vibrant Chatbot&lt;/title&gt;&#10;  &lt;style&gt;&#10;    /* Reset básico */&#10;    * { margin:0; padding:0; box-sizing: border-box; }&#10;&#10;    body {&#10;      font-family: 'Segoe UI', sans-serif;&#10;      background: linear-gradient(135deg, #FF5F6D 0%, #FFC371 100%);&#10;      height: 100vh;&#10;      display: flex;&#10;      align-items: center;&#10;      justify-content: center;&#10;    }&#10;&#10;    .chat-container {&#10;      width: 360px;&#10;      max-width: 90%;&#10;      height: 600px;&#10;      background: #FFFFFF;&#10;      border-radius: 20px;&#10;      box-shadow: 0 10px 30px rgba(0,0,0,0.2);&#10;      display: flex;&#10;      flex-direction: column;&#10;      overflow: hidden;&#10;    }&#10;&#10;    .header {&#10;      background: linear-gradient(90deg, #FF5F6D, #FFC371);&#10;      padding: 16px;&#10;      color: white;&#10;      text-align: center;&#10;      font-weight: bold;&#10;      font-size: 1.2rem;&#10;    }&#10;&#10;    .messages {&#10;      flex: 1;&#10;      padding: 16px;&#10;      overflow-y: auto;&#10;    }&#10;&#10;    .message {&#10;      margin-bottom: 12px;&#10;      display: flex;&#10;    }&#10;    .message.user { justify-content: flex-end; }&#10;    .message.bot { justify-content: flex-start; }&#10;&#10;    .bubble {&#10;      max-width: 75%;&#10;      padding: 10px 14px;&#10;      border-radius: 18px;&#10;      position: relative;&#10;      line-height: 1.4;&#10;    }&#10;    .message.user .bubble {&#10;      background: #FF5F6D;&#10;      color: white;&#10;      border-bottom-right-radius: 2px;&#10;    }&#10;    .message.bot .bubble {&#10;      background: #E0E0E0;&#10;      color: #333;&#10;      border-bottom-left-radius: 2px;&#10;    }&#10;&#10;    .input-area {&#10;      display: flex;&#10;      padding: 12px;&#10;      background: #F9F9F9;&#10;    }&#10;    .input-area input {&#10;      flex: 1;&#10;      padding: 10px 12px;&#10;      border: none;&#10;      border-radius: 18px;&#10;      margin-right: 8px;&#10;      font-size: 1rem;&#10;      box-shadow: inset 0 2px 5px rgba(0,0,0,0.1);&#10;    }&#10;    .input-area button {&#10;      background: #FF5F6D;&#10;      border: none;&#10;      border-radius: 18px;&#10;      padding: 0 16px;&#10;      color: white;&#10;      font-weight: bold;&#10;      cursor: pointer;&#10;      transition: background .2s;&#10;    }&#10;    .input-area button:hover {&#10;      background: #FF375A;&#10;    }&#10;  &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;  &lt;div class=&quot;chat-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;Chat with Bot&lt;/div&gt;&#10;    &lt;div id=&quot;messages&quot; class=&quot;messages&quot;&gt;&lt;/div&gt;&#10;    &lt;div class=&quot;input-area&quot;&gt;&#10;      &lt;input type=&quot;text&quot; id=&quot;userInput&quot; placeholder=&quot;Type a message...&quot; /&gt;&#10;      &lt;button id=&quot;sendBtn&quot;&gt;Send&lt;/button&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&#10;  &lt;script&gt;&#10;    const messagesEl = document.getElementById('messages');&#10;    const inputEl    = document.getElementById('userInput');&#10;    const sendBtn    = document.getElementById('sendBtn');&#10;&#10;    // Função para renderizar balões&#10;    function addMessage(text, sender) {&#10;      const msgEl = document.createElement('div');&#10;      msgEl.classList.add('message', sender);&#10;      const bubble = document.createElement('div');&#10;      bubble.classList.add('bubble');&#10;      bubble.textContent = text;&#10;      msgEl.appendChild(bubble);&#10;      messagesEl.appendChild(msgEl);&#10;      messagesEl.scrollTop = messagesEl.scrollHeight;&#10;    }&#10;&#10;    // Chama seu webhook FastAPI → Dialogflow&#10;    async function sendToBot(text) {&#10;      addMessage(text, 'user');&#10;      inputEl.value = '';&#10;      try {&#10;        const res = await fetch('https://your-domain.com/webhook', {&#10;          method: 'POST',&#10;          headers: { 'Content-Type': 'application/json' },&#10;          body: JSON.stringify({&#10;            session: 'projects/your-project-id/agent/sessions/unique-session',&#10;            queryInput: { text: { text, languageCode: 'en' } }&#10;          })&#10;        });&#10;        const json = await res.json();&#10;        const reply = json.fulfillmentText || '...';&#10;        addMessage(reply, 'bot');&#10;      } catch (err) {&#10;        addMessage('Error connecting to bot.', 'bot');&#10;        console.error(err);&#10;      }&#10;    }&#10;&#10;    sendBtn.addEventListener('click', () =&gt; {&#10;      const txt = inputEl.value.trim();&#10;      if (txt) sendToBot(txt);&#10;    });&#10;    inputEl.addEventListener('keypress', e =&gt; {&#10;      if (e.key === 'Enter') sendBtn.click();&#10;    });&#10;&#10;    // Mensagem inicial&#10;    addMessage('Hello! How can I help you today?', 'bot');&#10;  &lt;/script&gt;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>